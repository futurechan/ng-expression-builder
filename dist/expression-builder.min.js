angular.module("expression-builder",["ui.bootstrap"]).controller("ExpressionBuilderController",["$scope",function(e){e.addCondition=function(){e.conditions.push({})},e.addGroup=function(){e.conditions.push({conditions:[]})},e.remove=function(r){var o=e.conditions.indexOf(r);e.removeAt(o)},e.removeAt=function(r){e.conditions.splice(r,1)},e.getLeftOperands=function(r){return e.staticLeftOperandProvider?e.staticLeftOperandProvider():e.leftOperandProvider?e.leftOperandProvider(r):[]},e.getRightOperands=function(r){return e.staticRightOperandProvider?e.staticRightOperandProvider():e.rightOperandProvider?e.rightOperandProvider(r):[]}}]).directive("expressionBuilder",["$compile",function(e){return{restrict:"EA",controller:"ExpressionBuilderController",templateUrl:"templates/expressionbuilder.html",scope:{conditions:"=",booleanOperators:"=?",comparisonOperators:"=?",leftOperandProvider:"&",staticLeftOperandProvider:"&",rightOperandProvider:"&",staticRightOperandProvider:"&"},compile:function(r){var o,n=r.contents().remove();return function(r,t){angular.isUndefined(o)&&(o=e(n)),o(r,function(e){t.append(e)}),void 0===r.booleanOperators&&(r.booleanOperators=["AND","OR","XOR"]),void 0===r.comparisonOperators&&(r.comparisonOperators=["=","<>","<","<=",">",">=","[]","![]"]),r.leftOperandProvider&&(r.leftOperandProvider=r.leftOperandProvider()),r.staticLeftOperandProvider&&(r.staticLeftOperandProvider=r.staticLeftOperandProvider()),r.rightOperandProvider&&(r.rightOperandProvider=r.rightOperandProvider()),r.staticRightOperandProvider&&(r.staticRightOperandProvider=r.staticRightOperandProvider())}}}}]),angular.module("expression-builder").run(["$templateCache",function(e){e.put("templates/expressionbuilder.html",'<div class=condition-builder><div ng-repeat="c in conditions"><div ng-if="$index != 0" class="form-inline bool-op"><select class="form-control input-sm" ng-options="o as o for o in booleanOperators" ng-model=c.bool></select></div><div ng-if=c.conditions class=condition-group><div class=pull-right><button class="btn btn-danger btn-sm" ng-click=removeAt($index)>&times;</button></div><expression-builder conditions=c.conditions boolean-operators=booleanOperators comparison-operators=comparisonOperators left-operand-provider=leftOperandProvider static-left-operand-provider=staticLeftOperandProvider right-operand-provider=rightOperandProvider static-right-operand-provider=staticRightOperandProvider></expression-builder></div><div ng-if=!c.conditions class=form-inline><div class=form-group-sm><select class=form-control ng-if=staticLeftOperandProvider ng-model=c.leftOperand ng-options="operand for operand in getLeftOperands()"></select><input class=form-control ng-if=!staticLeftOperandProvider ng-model=c.leftOperand placeholder="Left Operand" typeahead="operand for operand in getLeftOperands($viewValue)"><select class=form-control ng-model=c.comparison ng-options="o as o for o in comparisonOperators"></select><select class=form-control ng-if=staticRightOperandProvider ng-model=c.rightOperand ng-options="operand for operand in getRightOperands()"></select><input class=form-control ng-if=!staticRightOperandProvider ng-model=c.rightOperand placeholder="Right Operand" typeahead="operand for operand in getRightOperands($viewValue)"> <button class="btn btn-danger btn-sm" ng-click=removeAt($index)>&times;</button></div></div></div><div class=condition-group-button-row><button class="btn btn-default btn-sm" ng-click=addCondition()><span class="glyphicon glyphicon-plus-sign"></span> Add Condition</button> <button class="btn btn-default btn-sm" ng-click=addGroup()><span class="glyphicon glyphicon-plus-sign"></span> Add Group</button></div></div>')}]);